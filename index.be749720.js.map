{"mappings":"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","sources":["src/index.js","src/js/open_modal.js","src/js/add_to_watched.js","src/js/add_to_queue.js"],"sourcesContent":["import './js/movie_search';\nimport './js/pagination';\nimport './js/open_modal';\nimport './js/add_to_queue';\nimport './js/add_to_watched';\n\n","import { renderModalMovie } from './cards_rendering';\n\nimport { modalTeam } from './modal_team';\n\nimport { API_KEY, GENRE_URL, API_URL } from './main_fetch.js';\n\nimport { displayModalLoader } from './loader_spinner';\n\nconst MOVIE_URL = `https://api.themoviedb.org/3/movie/`;\nconst refs = {\n  body: document.querySelector('body'),\n  backdropModal: document.querySelector('.backdrop'),\n  modal: document.querySelector('.modal-content'),\n};\n\nrefs.body.addEventListener('click', openModal);\nexport const oneMovieFetch = async movieId => {\n  const response = await fetch(`${MOVIE_URL}${movieId}?api_key=${API_KEY}`);\n  const movie = await response.json();\n  return movie;\n};\nfunction openModal(e) {\n  if (e.target.classList.contains('backdrop')) {\n    closeModal();\n  }\n  const id = e.target.getAttribute('data-movieId');\n  if (e.target?.closest('svg')?.classList.contains('modal-close')) {\n    closeModal();\n  } else {\n    document.addEventListener('keydown', checkModalKey);\n\n    if (e.target?.closest('div')?.classList.contains('movie-card')) {\n      refs.backdropModal.classList.remove('is-hidden');\n      // document.addEventListener('keydown', checkModalKey);\n      displayModalLoader();\n      oneMovieFetch(id).then(elem => {\n        setTimeout(() => {\n          renderModalMovie(elem);\n        }, 1000);\n      });\n    }\n    if (e.target?.closest('span')?.classList.contains('team-link')) {\n      refs.backdropModal.classList.remove('is-hidden');\n      // document.addEventListener('keydown', checkModalKey);\n      modalTeam();\n    }\n  }\n}\n\nfunction closeModal() {\n  refs.body.style.overflowY = 'scroll';\n  refs.backdropModal.classList.add('is-hidden');\n  document.removeEventListener('keydown', checkModalKey);\n\n  refs.modal.innerHTML = '';\n}\n\nfunction checkModalKey(e) {\n  console.log(e.code);\n  if (e.code === 'Escape') {\n    closeModal();\n  }\n}\n","import { storageKeyQueue } from './add_to_queue';\nimport { Notify } from 'notiflix';\n\nconst modal = document.querySelector('.modal');\nexport const storageKeyWatched = 'movies-watched';\n\nmodal.addEventListener('click', ev => {\n  const targetEl = ev.target;\n  if (\n    targetEl.nodeName == 'BUTTON' &&\n    targetEl.classList.contains('button--watched')\n  ) {\n    // get movie data from DOM\n    const movieId = modal.querySelector('div[data-movieid]').dataset.movieid;\n    const movieTitle = modal.querySelector(\n      '.film-details__main-title'\n    ).innerHTML;\n\n    let watchedList = JSON.parse(localStorage.getItem(storageKeyWatched));\n    if (watchedList == null) {\n      watchedList = [];\n    }\n\n    // making a list of ids that are already in localStorage\n    let watchedIds = [];\n    watchedList.forEach(watchedMovie => {\n      watchedIds.push(watchedMovie.id);\n    });\n\n    // checking if the film is already in localStorage or not\n    if (watchedIds.includes(movieId)) {\n      Notify.warning('You already added the movie to watched');\n    } else {\n      // check if movie is in queue list ...\n      let queuedList = JSON.parse(localStorage.getItem(storageKeyQueue));\n      if (queuedList) {\n        // ... if it even exists ...\n        if (queuedList.length > 0) {\n          // ... and if it's not an empty array\n          let queuedIds = [];\n          queuedList.forEach(queuedMovie => {\n            queuedIds.push(queuedMovie.id);\n          });\n          // Remove movie from queue list, if it's in there\n          if (queuedIds.includes(movieId)) {\n            queuedList.splice(queuedIds.indexOf(movieId), 1);\n            localStorage.setItem(storageKeyQueue, JSON.stringify(queuedList));\n          }\n        }\n      }\n\n      // finally add movie to watched list\n      const movieInfo = {\n        id: movieId,\n        title: movieTitle,\n      };\n      watchedList.push(movieInfo);\n      localStorage.setItem(storageKeyWatched, JSON.stringify(watchedList));\n    }\n  }\n});","import { storageKeyWatched } from './add_to_watched';\nimport { Notify } from 'notiflix';\n\nconst modal = document.querySelector('.modal');\nexport const storageKeyQueue = 'movies-queued';\n\nmodal.addEventListener('click', ev => {\n  const targetEl = ev.target;\n  if (\n    targetEl.nodeName == 'BUTTON' &&\n    targetEl.classList.contains('button--queue')\n  ) {\n    // get movie data from DOM\n    const movieId = modal.querySelector('div[data-movieid]').dataset.movieid;\n    const movieTitle = modal.querySelector(\n      '.film-details__main-title'\n    ).innerHTML;\n\n    let queuedList = JSON.parse(localStorage.getItem(storageKeyQueue));\n    if (queuedList == null) {\n      queuedList = [];\n    }\n\n    // making a list of ids that are already in localStorage\n    let queuedIds = [];\n    queuedList.forEach(queuedMovie => {\n      queuedIds.push(queuedMovie.id);\n    });\n\n    //checking if the film is already in localStorage or not\n    if (queuedIds.includes(movieId)) {\n      Notify.warning('You already added the movie to queued');\n    } else {\n      // check if movie is in watched list ...\n      let watchedList = JSON.parse(localStorage.getItem(storageKeyWatched));\n      if (watchedList) {\n        // ... if it even exists ...\n        if (watchedList.length > 0) {\n          // ... and if it's not an empty array\n          let watchedIds = [];\n          watchedList.forEach(watchedMovie => {\n            watchedIds.push(watchedMovie.id);\n          });\n          // Remove movie from watched list, if it's in there\n          if (watchedIds.includes(movieId)) {\n            watchedList.splice(watchedIds.indexOf(movieId), 1);\n            localStorage.setItem(\n              storageKeyWatched,\n              JSON.stringify(watchedList)\n            );\n          }\n        }\n      }\n\n      // finally add movie to queued list\n      const movieInfo = {\n        id: movieId,\n        title: movieTitle,\n      };\n      queuedList.push(movieInfo);\n      localStorage.setItem(storageKeyQueue, JSON.stringify(queuedList));\n    }\n  }\n});"],"names":["parcelRequire","$bpxeT","$870bee002d937441$var$refs","body","document","querySelector","backdropModal","modal","addEventListener","e","ref","ref1","target","classList","contains","$870bee002d937441$var$closeModal","id","getAttribute","closest","ref2","ref3","ref4","ref5","$870bee002d937441$var$checkModalKey","remove","$eizMI","displayModalLoader","$870bee002d937441$export$d26b433b93abe1a0","then","elem","setTimeout","$iGUyU","renderModalMovie","$cfhex","modalTeam","$parcel$interopDefault","$2TvXO","mark","_callee","movieId","response","movie","fetch","concat","$gJQog","API_KEY","_ctx","sent","json","style","overflowY","add","removeEventListener","innerHTML","console","log","code","$a4ca6e042ef005e4$var$modal","$a4ca6e042ef005e4$export$495501e7ab0a9653","ev","targetEl","nodeName","dataset","movieid","movieTitle","watchedList","JSON","parse","localStorage","getItem","watchedIds","forEach","watchedMovie","push","includes","$6JpON","Notify","warning","queuedList","$29a929db5866e5fb$export$88934817e6e237da","length","queuedIds","queuedMovie","splice","indexOf","setItem","stringify","movieInfo","title","$29a929db5866e5fb$var$modal"],"version":3,"file":"index.be749720.js.map"}