{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-2216539678f1dba4.js","src/index.js","src/js/open_modal.js","node_modules/@parcel/runtime-js/lib/runtime-b2b5657ea70b7859.js","node_modules/@parcel/runtime-js/lib/runtime-822f093cf9ae041f.js","node_modules/@parcel/runtime-js/lib/runtime-6b1d79f0028c0505.js","node_modules/@parcel/runtime-js/lib/runtime-537bf28f2fc4b6b4.js","node_modules/@parcel/runtime-js/lib/runtime-135f677539942cc2.js","src/js/modal_team.js","node_modules/@parcel/runtime-js/lib/runtime-9f4462187908e953.js","src/js/add_to_watched.js","src/js/add_to_queue.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.ea3da601.js\\\",\\\"jfzOD\\\":\\\"krzysztof.30b29e2e.jpg\\\",\\\"4vb3p\\\":\\\"malgorzata.df1f1bf7.jpg\\\",\\\"4jHJh\\\":\\\"szymon.b7d9ad61.jpg\\\",\\\"6VoHB\\\":\\\"dorota.b38eb718.jpg\\\",\\\"hn0vb\\\":\\\"marta.43c8a483.jpg\\\",\\\"eFuxO\\\":\\\"mateusz.640d1e4f.jpg\\\",\\\"e19jG\\\":\\\"index.648be2ef.js\\\"}\"));","import './js/movie_search';\nimport './js/pagination';\nimport './js/open_modal';\nimport './js/add_to_queue';\nimport './js/add_to_watched';\n\n","import { renderModalMovie } from './cards_rendering';\n\nimport { modalTeam } from './modal_team';\n\nimport { API_KEY, GENRE_URL, API_URL } from './main_fetch.js';\n\nimport { displayModalLoader } from './loader_spinner';\n\nconst MOVIE_URL = `https://api.themoviedb.org/3/movie/`;\nconst refs = {\n  body: document.querySelector('body'),\n  backdropModal: document.querySelector('.backdrop'),\n  modal: document.querySelector('.modal-content'),\n};\n\nrefs.body.addEventListener('click', openModal);\nexport const oneMovieFetch = async movieId => {\n  const response = await fetch(`${MOVIE_URL}${movieId}?api_key=${API_KEY}`);\n  const movie = await response.json();\n  return movie;\n};\nfunction openModal(e) {\n  if (e.target.classList.contains('backdrop')) {\n    closeModal();\n  }\n  const id = e.target.getAttribute('data-movieId');\n  if (e.target?.closest('svg')?.classList.contains('modal-close')) {\n    closeModal();\n  } else {\n    document.addEventListener('keydown', checkModalKey);\n\n    if (e.target?.closest('div')?.classList.contains('movie-card')) {\n      refs.backdropModal.classList.remove('is-hidden');\n      // document.addEventListener('keydown', checkModalKey);\n      displayModalLoader();\n      oneMovieFetch(id).then(elem => {\n        setTimeout(() => {\n          renderModalMovie(elem);\n        }, 1000);\n      });\n    }\n    if (e.target?.closest('span')?.classList.contains('team-link')) {\n      refs.backdropModal.classList.remove('is-hidden');\n      // document.addEventListener('keydown', checkModalKey);\n      modalTeam();\n    }\n  }\n}\n\nfunction closeModal() {\n  refs.body.style.overflowY = 'scroll';\n  refs.backdropModal.classList.add('is-hidden');\n  document.removeEventListener('keydown', checkModalKey);\n\n  refs.modal.innerHTML = '';\n}\n\nfunction checkModalKey(e) {\n  console.log(e.code);\n  if (e.code === 'Escape') {\n    closeModal();\n  }\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jfzOD\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4vb3p\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4jHJh\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"6VoHB\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hn0vb\")).toString();","import krzysztof from '../images/krzysztof.jpg';\nimport malgorzata from '../images/malgorzata.jpg';\nimport szymon from '../images/szymon.jpg';\nimport dorota from '../images/dorota.jpg';\nimport marta from '../images/marta.jpg';\nimport mateusz from '../images/mateusz.jpg';\n\nexport function modalTeam() {\n  const teamMarkup = `\n  <div class=\"team-details\">\n    <h2 class=\"team-details__title\"> Mellow Yellow Team </h2>\n    <ul class=\"team-details__list list\">\n      <li class=\"team-details__item\">\n        <figure>\n          <img class=\"team_img\" src=\"${szymon}\" loading=\"lazy\" />\n          <figcaption>\n            <h3 class=\"team-details__name\">Szymon Dymański</h3>\n            <p class=\"team-details_role\">Team Lider / Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n          <img class=\"team_img\" src=\"${dorota}\" loading=\"lazy\" />\n          <figcaption>\n            <h3 class=\"team-details__name\">Dorota Domańska</h3>\n            <p class=\"team-details_role\">Scrum Master / Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n          <img class=\"team_img\" src=\"${malgorzata}\" loading=\"lazy\" />\n          <figcaption>\n            <h3 class=\"team-details__name\">Małgorzata Marczyńska</h3>\n            <p class=\"team-details_role\">Grey Goose / Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n          <img class=\"team_img\" src=\"${marta}\" loading=\"lazy\" />\n          <figcaption>\n            <h3 class=\"team-details__name\">Marta Domżalska</h3>\n            <p class=\"team-details_role\">Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n          <img class=\"team_img\" src=\"${mateusz}\" loading=\"lazy\" />\n          <figcaption>\n            <h3 class=\"team-details__name\">Mateusz Martin</h3>\n            <p class=\"team-details_role\">Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n      <li class=\"team-details__item\">\n        <figure>\n          <img class=\"team_img\" src=\"${krzysztof}\" loading=\"lazy\" />\n          <figcaption>\n            <h3 class=\"team-details__name\">Krzysztof Flisikowski</h3>\n            <p class=\"team-details_role\">Developer</p>\n          </figcaption>\n        </figure>\n      </li>\n    </ul>\n  </div>\n     `;\n  const modalContent = document.querySelector('.modal-content');\n  modalContent.insertAdjacentHTML('afterbegin', teamMarkup);\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"eFuxO\")).toString();","import { storageKeyQueue } from './add_to_queue';\nimport { Notify } from 'notiflix';\n\nconst modal = document.querySelector('.modal');\nexport const storageKeyWatched = 'movies-watched';\n\nmodal.addEventListener('click', ev => {\n  const targetEl = ev.target;\n  if (\n    targetEl.nodeName == 'BUTTON' &&\n    targetEl.classList.contains('button--watched')\n  ) {\n    // get movie data from DOM\n    const movieId = modal.querySelector('div[data-movieid]').dataset.movieid;\n    const movieTitle = modal.querySelector(\n      '.film-details__main-title'\n    ).innerHTML;\n\n    let watchedList = JSON.parse(localStorage.getItem(storageKeyWatched));\n    if (watchedList == null) {\n      watchedList = [];\n    }\n\n    // making a list of ids that are already in localStorage\n    let watchedIds = [];\n    watchedList.forEach(watchedMovie => {\n      watchedIds.push(watchedMovie.id);\n    });\n\n    // checking if the film is already in localStorage or not\n    if (watchedIds.includes(movieId)) {\n      Notify.warning('You already added the movie to watched');\n    } else {\n      // check if movie is in queue list ...\n      let queuedList = JSON.parse(localStorage.getItem(storageKeyQueue));\n      if (queuedList) {\n        // ... if it even exists ...\n        if (queuedList.length > 0) {\n          // ... and if it's not an empty array\n          let queuedIds = [];\n          queuedList.forEach(queuedMovie => {\n            queuedIds.push(queuedMovie.id);\n          });\n          // Remove movie from queue list, if it's in there\n          if (queuedIds.includes(movieId)) {\n            queuedList.splice(queuedIds.indexOf(movieId), 1);\n            localStorage.setItem(storageKeyQueue, JSON.stringify(queuedList));\n          }\n        }\n      }\n\n      // finally add movie to watched list\n      const movieInfo = {\n        id: movieId,\n        title: movieTitle,\n      };\n      watchedList.push(movieInfo);\n      localStorage.setItem(storageKeyWatched, JSON.stringify(watchedList));\n    }\n  }\n});","import { storageKeyWatched } from './add_to_watched';\nimport { Notify } from 'notiflix';\n\nconst modal = document.querySelector('.modal');\nexport const storageKeyQueue = 'movies-queued';\n\nmodal.addEventListener('click', ev => {\n  const targetEl = ev.target;\n  if (\n    targetEl.nodeName == 'BUTTON' &&\n    targetEl.classList.contains('button--queue')\n  ) {\n    // get movie data from DOM\n    const movieId = modal.querySelector('div[data-movieid]').dataset.movieid;\n    const movieTitle = modal.querySelector(\n      '.film-details__main-title'\n    ).innerHTML;\n\n    let queuedList = JSON.parse(localStorage.getItem(storageKeyQueue));\n    if (queuedList == null) {\n      queuedList = [];\n    }\n\n    // making a list of ids that are already in localStorage\n    let queuedIds = [];\n    queuedList.forEach(queuedMovie => {\n      queuedIds.push(queuedMovie.id);\n    });\n\n    //checking if the film is already in localStorage or not\n    if (queuedIds.includes(movieId)) {\n      Notify.warning('You already added the movie to queued');\n    } else {\n      // check if movie is in watched list ...\n      let watchedList = JSON.parse(localStorage.getItem(storageKeyWatched));\n      if (watchedList) {\n        // ... if it even exists ...\n        if (watchedList.length > 0) {\n          // ... and if it's not an empty array\n          let watchedIds = [];\n          watchedList.forEach(watchedMovie => {\n            watchedIds.push(watchedMovie.id);\n          });\n          // Remove movie from watched list, if it's in there\n          if (watchedIds.includes(movieId)) {\n            watchedList.splice(watchedIds.indexOf(movieId), 1);\n            localStorage.setItem(\n              storageKeyWatched,\n              JSON.stringify(watchedList)\n            );\n          }\n        }\n      }\n\n      // finally add movie to queued list\n      const movieInfo = {\n        id: movieId,\n        title: movieTitle,\n      };\n      queuedList.push(movieInfo);\n      localStorage.setItem(storageKeyQueue, JSON.stringify(queuedList));\n    }\n  }\n});"],"names":["parcelRequire","register","JSON","parse","$d96cH","$be6a54c0d778cb86$exports","URL","resolve","import","meta","url","toString","$1bd2a004e5be8fb7$exports","$fd2b5e4a35376a47$exports","$f82e59bf0d24ff91$exports","$964f77c5e08eae0a$exports","$cade84fc34b4ef44$export$a8e00544ba5ccf21","teamMarkup","$parcel$interopDefault","$996299a915556e0f$exports","document","querySelector","insertAdjacentHTML","$d9eabaf351c8e1e9$var$refs","body","backdropModal","modal","addEventListener","e","target","classList","contains","$d9eabaf351c8e1e9$var$closeModal","id","getAttribute","closest","$d9eabaf351c8e1e9$var$checkModalKey","remove","$3zUgC","displayModalLoader","async","movieId","response","fetch","$fHzm8","API_KEY","json","$d9eabaf351c8e1e9$export$d26b433b93abe1a0","then","elem","setTimeout","renderModalMovie","style","overflowY","add","removeEventListener","innerHTML","console","log","code","$5107f577ce8caa04$var$modal","ev","targetEl","nodeName","dataset","movieid","movieTitle","watchedList","localStorage","getItem","watchedIds","forEach","watchedMovie","push","includes","$7Y9D8","Notify","warning","queuedList","$f53ed1f8111341cc$export$88934817e6e237da","length","queuedIds","queuedMovie","splice","indexOf","setItem","stringify","movieInfo","title","$f53ed1f8111341cc$var$modal"],"version":3,"file":"index.ea3da601.js.map"}