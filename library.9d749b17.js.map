{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAKOC,eAAeC,EAAaC,GACjC,IAAIC,EAAmB,GAEvB,IAAK,MAAMC,KAAWF,EACpBC,EAAiBE,KAAa,sCAAGD,EAAQE,+CAE3CC,QAAQC,IAAI,iCAAkCL,GAC9C,MAAMM,EAAS,GAEf,IAAK,MAAMC,KAASP,EAAkB,CACpC,IAAIQ,cAAmBC,MAAMF,IAAQG,OACjCC,EAASH,EAAY,OACrBI,EAAY,GAChB,IAAK,MAAMC,KAASF,EAClBC,EAAUV,KAAKW,EAAMV,IAEvBK,EAAe,UAAII,EACnBN,EAAOJ,KAAKM,E,CAEdJ,QAAQC,IAAI,gBAAiBC,IAC7B,EAAAX,EAAAmB,cAAa,EAAGR,EAAQA,EAAO,GAAW,QAC1CS,EAAAC,gBAAgBC,UAAY,E,2BCpB9B,MAAMC,EAAkBC,SAASC,cAC/B,kCAEIC,EAAoBF,SAASC,cAAc,iBAC3CE,EAAkBH,SAASC,cAAc,gBACzCG,EAAkBJ,SAASC,cAAc,eAG/C,IAAII,EAAgB,CAACC,KAAKC,MAAMC,aAAaC,QAAQ,oBACjDC,EAAe,CAACJ,KAAKC,MAAMC,aAAaC,QAAQ,mBAY7C,SAASE,IACdnC,EAAAoC,QAAQd,UAAY,GACpBF,EAAAC,gBAAgBC,UAAY,GAC5Be,G,CAGFnC,eAAemC,IAUb,GARAX,EAAkBY,UAAUC,IAAI,kBAChCb,EAAkBY,UAAUE,OAAO,oBACnCpB,EAAAC,gBAAgBC,UAAY,GAC5BK,EAAgBW,UAAUC,IAAI,oBAC9BZ,EAAgBW,UAAUE,OAAO,kBAIT,MAApBX,EAAc,IAAsC,GAAxBA,EAAcY,OAG5C,OAFArB,EAAAC,gBAAgBC,UAAY,QAC5BM,EAAgBN,UAAY,mDAG5BF,EAAAC,gBAAgBC,UAAY,GAG5BnB,EAAa0B,EAAc,G,CAlC/B7B,EAAAoC,QAAQd,UAAY,GACpBF,EAAAC,gBAAgBC,UAAY,GAE5BoB,YAAW,KAETP,IACAE,GAAiB,GAChB,KAqDHd,EAAgBoB,iBAAiB,QAASR,GAE1CT,EAAkBiB,iBAAiB,QAASN,GAC5CV,EAAgBgB,iBAAiB,SA1BjCzC,iBAEEyB,EAAgBW,UAAUC,IAAI,kBAC9BZ,EAAgBW,UAAUE,OAAO,oBAEjCd,EAAkBY,UAAUC,IAAI,oBAChCb,EAAkBY,UAAUE,OAAO,kBAGnCZ,EAAgBN,UAAY,GACL,MAAnBY,EAAa,IAAqC,GAAvBA,EAAaO,OAC1Cb,EAAgBN,UAAY,iDAI5BnB,EAAa+B,EAAa,G","sources":["src/js/library_fetch.js","src/js/library_main.js"],"sourcesContent":["import { renderMovies } from './cards_rendering';\nconst api_key = `bf9c4d58b7779ca7f547438ec065a7d2`;\nconst api_url = `https://api.themoviedb.org/3/movie/`;\nimport { paginationPlace } from './pagination';\n\nexport async function fetchLibrary(ids) {\n  let watchedMoviesURL = [];\n  // finding movie\n  for (const movieId of ids) {\n    watchedMoviesURL.push(api_url+`${movieId.id}?api_key=${api_key}`);\n  }\n  console.log('Movies in this library (URL): ', watchedMoviesURL);\n  const movies = [];\n\n  for (const movie of watchedMoviesURL) {\n    let res = await (await fetch(movie)).json();\n    let genres = res[`genres`];\n    let genresIds = [];\n    for (const genre of genres) {\n      genresIds.push(genre.id);\n    }\n    res['genre_ids'] = genresIds;\n    movies.push(res);\n  }\n  console.log('This library:', movies);\n  renderMovies(0, movies, movies[0]['genres']);\n  paginationPlace.innerHTML = '';\n}\n","import { fetchLibrary } from './library_fetch';\nimport { paginationPlace } from './pagination';\nimport { gallery } from './cards_rendering';\n\n\n// DOM elements\nconst myLibraryButton = document.querySelector(\n  '.navigation__item:nth-child(2)'\n);\nconst watchedListButton = document.querySelector('[loadWatched]');\nconst queueListButton = document.querySelector('[loadQueued]');\nconst moviesContainer = document.querySelector('.film-cards');\n\n// Local storage\nlet watchedMovies = [JSON.parse(localStorage.getItem('movies-watched'))];\nlet queuedMovies = [JSON.parse(localStorage.getItem('movies-queued'))];\n// console.log(watchedMovies, queuedMovies)\ngallery.innerHTML = \"\";\npaginationPlace.innerHTML = '';\n\nsetTimeout(() => {\n  \n  loadLibrary();\n  loadWatchedList();\n}, 1000)\n\n\nexport function loadLibrary() {\n  gallery.innerHTML = \"\";\n  paginationPlace.innerHTML = '';\n  loadWatchedList();\n}\n\nasync function loadWatchedList() {\n  // button's visual changes\n  watchedListButton.classList.add('button--active');\n  watchedListButton.classList.remove('button--inactive');\n  paginationPlace.innerHTML = '';\n  queueListButton.classList.add('button--inactive');\n  queueListButton.classList.remove('button--active');\n\n  // change showed movies\n\n  if (watchedMovies[0] == null || watchedMovies.length == 0) {\n    paginationPlace.innerHTML = '';\n    moviesContainer.innerHTML = `<h2>You don't have any watched movies yet!</h2>`;\n    return;\n  } else {\n    paginationPlace.innerHTML = '';\n    // console.log(watchedMovies);\n\n    fetchLibrary(watchedMovies[0]);\n  }\n}\nasync function loadQueueList() {\n  // button's visual changes\n  queueListButton.classList.add('button--active');\n  queueListButton.classList.remove('button--inactive');\n\n  watchedListButton.classList.add('button--inactive');\n  watchedListButton.classList.remove('button--active');\n\n  // change showed movies\n  moviesContainer.innerHTML = '';\n  if (queuedMovies[0] == null || queuedMovies.length == 0) {\n    moviesContainer.innerHTML = `<h2>You don't have any queued movies yet!</h2>`;\n    // return;\n  } else {\n    // console.log(queuedMovies[0]);\n    fetchLibrary(queuedMovies[0]);\n  }\n}\n\n// loadLibrary();\n// loadWatchedList();\n\n\nmyLibraryButton.addEventListener('click', loadLibrary);\n\nwatchedListButton.addEventListener('click', loadWatchedList);\nqueueListButton.addEventListener('click', loadQueueList);\n\n"],"names":["$d96cH","parcelRequire","async","$72976d1174c36c4a$export$3da1c33d77833b0c","ids","watchedMoviesURL","movieId","push","id","console","log","movies","movie","res","fetch","json","genres","genresIds","genre","renderMovies","$2nhTy","paginationPlace","innerHTML","$79aba5f329ef8862$var$myLibraryButton","document","querySelector","$79aba5f329ef8862$var$watchedListButton","$79aba5f329ef8862$var$queueListButton","$79aba5f329ef8862$var$moviesContainer","$79aba5f329ef8862$var$watchedMovies","JSON","parse","localStorage","getItem","$79aba5f329ef8862$var$queuedMovies","$79aba5f329ef8862$export$826c32731ceb1c03","gallery","$79aba5f329ef8862$var$loadWatchedList","classList","add","remove","length","setTimeout","addEventListener"],"version":3,"file":"library.9d749b17.js.map"}