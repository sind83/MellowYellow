{"mappings":"AAAA,MCEaA,EAAUC,SAASC,cAAc,eAEvC,SAASC,EAAaC,EAAMC,EAAU,GAAIC,GAC/CN,EAAQO,UAAY,GACpB,MAAMC,EAASH,EACZI,KACC,EAACC,YAAEA,EAAWC,MAAEA,EAAKC,UAAEA,EAASC,aAAEA,EAAYC,aAAEA,EAAcC,GAAAC,MAC5D,MAAMC,EAAWX,EAAOG,KAAIS,GAASA,EAAMH,KACrCI,EAAab,EAAOG,KAAIS,GAASA,EAAME,OACvCC,EAAc,GACpBT,EAAUU,SAAQP,IAChBM,EAAYE,KAAKN,EAASO,QAAQT,IAC3BM,KAET,MAAMI,EAAeJ,EAClBZ,KAAIiB,GAAQP,EAAWO,KACvBC,MAAM,EAAG,GACTC,KAAK,MA2BFC,EAAclB,EAAMgB,MAAM,EAAG,IADtB,MAKb,MAAO,yCAAyCX,sFACwBN,WAAqBC,qFAJvEA,EAAMmB,QAAU,GAAKD,EAAclB,mCAOtCc,OALCX,EAAaa,MAAM,EAAG,qDAMNd,gCACvB,IAGhBe,KAAK,IACR5B,EAAQ+B,mBAAmB,aAAcvB,E,CCxDpCwB,eAAeC,EAAaC,GACjC,IAAIC,EAAmB,GAEvB,IAAK,MAAMC,KAAWF,EACpBC,EAAiBZ,KAAe,sCAAGa,EAAQrB,+CAE7CsB,QAAQC,IAAI,iCAAkCH,GAC9C,MAAMI,EAAS,GAEf,IAAK,MAAMC,KAASL,EAAkB,CACpC,IAAIM,cAAmBC,MAAMF,IAAQG,OACjCrC,EAASmC,EAAY,OACrBG,EAAY,GAChB,IAAK,MAAM1B,KAASZ,EAClBsC,EAAUrB,KAAKL,EAAMH,IAEvB0B,EAAe,UAAIG,EACnBL,EAAOhB,KAAKkB,E,CAEdJ,QAAQC,IAAI,gBAAiBC,GAC7BpC,EAAa,EAAGoC,EAAQA,EAAO,GAAW,O,CCrB5C,MAAMM,EAAkB5C,SAASC,cAC/B,kCAEI4C,EAAoB7C,SAASC,cAAc,iBAC3C6C,EAAkB9C,SAASC,cAAc,gBACzC8C,EAAkB/C,SAASC,cAAc,eAGzC+C,EAAgB,CAACC,KAAKC,MAAMC,aAAaC,QAAQ,oBACjDC,EAAe,CAACJ,KAAKC,MAAMC,aAAaC,QAAQ,mBAMtDrB,eAAeuB,IAEbT,EAAkBU,UAAUC,IAAI,kBAChCX,EAAkBU,UAAUE,OAAO,oBAEnCX,EAAgBS,UAAUC,IAAI,oBAC9BV,EAAgBS,UAAUE,OAAO,kBAGjCV,EAAgBzC,UAAY,GACP,MAAjB0C,GAAiD,GAAxBA,EAAcnB,QAIzCO,QAAQC,IAAIW,GAEZhB,EAAagB,EAAc,KAL3BD,EAAgBzC,UAAY,iD,CA0BhCsC,EAAgBc,iBAAiB,SAzC1B,W,IA2CPb,EAAkBa,iBAAiB,QAASJ,GAC5CR,EAAgBY,iBAAiB,SArBjC3B,iBAEEe,EAAgBS,UAAUC,IAAI,kBAC9BV,EAAgBS,UAAUE,OAAO,oBAEjCZ,EAAkBU,UAAUC,IAAI,oBAChCX,EAAkBU,UAAUE,OAAO,kBAGnCV,EAAgBzC,UAAY,GACR,MAAhB+C,GAA+C,GAAvBA,EAAaxB,QAIvCO,QAAQC,IAAIgB,EAAa,IACzBrB,EAAaqB,EAAa,KAJ1BN,EAAgBzC,UAAY,gD","sources":["src/js/main_fetch.js","src/js/cards_rendering.js","src/js/library_fetch.js","src/js/library_main.js"],"sourcesContent":["const API_KEY = `bf9c4d58b7779ca7f547438ec065a7d2`;\nconst API_URL = `https://api.themoviedb.org/3/trending/`;\nconst GENRE_URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=`;\n\nexport const popularMovies = async (pageNo = 1) => {\n  const movies = await (\n    await fetch(`${API_URL}movie/week?api_key=${API_KEY}&page=${pageNo}`)\n  ).json();\n  const genreIds = await (await fetch(`${GENRE_URL}${API_KEY}`)).json();\n  // console.log(`${API_URL}movie/week?api_key=${API_KEY}&page=${pageNo}`);\n  return { movies, genreIds };\n};\n","import { popularMovies } from './main_fetch';\n\nexport const gallery = document.querySelector('.film-cards');\n\nexport function renderMovies(page, results = [], genres) {\n  gallery.innerHTML = '';\n  const markup = results\n    .map(\n      ({ poster_path, title, genre_ids, vote_average, release_date, id }) => {\n        const genresId = genres.map(genre => genre.id);\n        const genreNames = genres.map(genre => genre.name);\n        const genresNames = [];\n        genre_ids.forEach(id => {\n          genresNames.push(genresId.indexOf(id));\n          return genresNames;\n        });\n        const namesOfGenre = genresNames\n          .map(idik => genreNames[idik])\n          .slice(0, 3)\n          .join(', ');\n        //funkcja Marty\n        // const genresArray = {};\n        // genres.forEach(genre => {\n        //   genresArray[genre.id] = genre.name;\n        // });\n        // const genreName = [];\n        // genre_ids.forEach(genreId => {\n        //   genreName.push(genresArray[genreId]);\n        // });\n        // const namesOfGenre = genreName.slice(0, 3).join(', ');\n        //funkcja Szymona\n        //     const markup = results\n        // .map(\n        //   ({ poster_path, title, genre_ids, vote_average, release_date, id }) => {\n        //     const gen = [];\n        //     let genreNames = '';\n        //     const genresIDS = genre_ids.map(item => {\n        //       genres.forEach(element => {\n        //         if (item === element.id) {\n        //           gen.push(element.name);\n        //         }\n        //       }\n        //       )\n        //       genreNames = gen.join(\", \");\n        //     });\n        const dots = '...';\n        const cuttedTitle = title.slice(0, 35) + dots;\n        const homePageTitle = title.length >= 40 ? cuttedTitle : title;\n\n        const releaseYear = release_date.slice(0, 4);\n        return `<div class='movie-card' data-movieId='${id}'>\n          <img class='movie-card__image' src='https://image.tmdb.org/t/p/w500/${poster_path}' alt='${title}' loading='lazy' />\n  <div class='movie-card__info'>\n   <p class='info__title'>${homePageTitle}</p>\n   <p class='info__adds'>${namesOfGenre} | ${releaseYear}</p>\n   <p class='info__adds info__adds--vote'>${vote_average}</p>   \n        </div></div>`;\n      }\n    )\n    .join('');\n  gallery.insertAdjacentHTML('afterbegin', markup);\n}\n\nexport function renderModalMovie(page, results = [], genres) {\n  const markup = results\n    .map(\n      ({\n        poster_path,\n        title,\n        original_title,\n        genres,\n        vote_average,\n        vote_count,\n        popularity,\n        overview,\n        id,\n      }) => {\n        const genresId = genres.map(genre => genre.id);\n        const genreNames = genres\n          .map(genre => genre.name)\n          .slice(0, 3)\n          .join(', ');\n        return `<div class='movie-card movie-card--modal' data-movieId='${id}'>\n          <img class='movie-card__image--modal' src='https://image.tmdb.org/t/p/w500/${poster_path}' alt='${title}' loading='lazy' />\n  <div class='movie-card__info movie-card__info--modal'>\n   <p class='info--modal__title'>${title}</p>\n   <div class='info--modal__adds'>\n   <p class='adds__description'> Vote / Votes</p>\n   <p class='adds__description'> Popularity</p>\n   <p class='adds__description'> Original Title</p>\n   <p class='adds__description'> Genre</p></div> \n   <p class='adds__value'> <span class='library'> ${vote_average}</span> / ${vote_count}</p>\n   <p class='adds__value'> ${popularity}</p>\n   <p class='adds__value adds__value--title'> ${original_title}</p>\n   <p class='adds__value'> ${genreNames}</p></div>\n   <p class='adds__about'><span class='adds__value--title'>About</span> ${overview}</p>\n  <div class='adds__buttons>\n   <button class='button button--inactive button--watched' type='button'>Add to watched</button>\n   <button class='button button--inactive button--queue' type='button'>Add to queue</button>     \n        </div></div></div></div>`;\n      }\n    )\n    .join('');\n  //gallery.insertAdjacentHTML('afterbegin', markup);\n}\n","import { renderMovies } from './cards_rendering';\nconst api_key = `bf9c4d58b7779ca7f547438ec065a7d2`;\nconst api_url = `https://api.themoviedb.org/3/movie/`;\n\nexport async function fetchLibrary(ids) {\n  let watchedMoviesURL = [];\n  // finding movie\n  for (const movieId of ids) {\n    watchedMoviesURL.push(api_url + `${movieId.id}?api_key=${api_key}`);\n  }\n  console.log('Movies in this library (URL): ', watchedMoviesURL);\n  const movies = [];\n\n  for (const movie of watchedMoviesURL) {\n    let res = await (await fetch(movie)).json();\n    let genres = res[`genres`];\n    let genresIds = [];\n    for (const genre of genres) {\n      genresIds.push(genre.id);\n    }\n    res['genre_ids'] = genresIds;\n    movies.push(res);\n  }\n  console.log('This library:', movies);\n  renderMovies(0, movies, movies[0]['genres']);\n}\n","import { fetchLibrary } from './library_fetch';\n\n// DOM elements\nconst myLibraryButton = document.querySelector(\n  '.navigation__item:nth-child(2)'\n);\nconst watchedListButton = document.querySelector('[loadWatched]');\nconst queueListButton = document.querySelector('[loadQueued]');\nconst moviesContainer = document.querySelector('.film-cards');\n\n// Local storage\nconst watchedMovies = [JSON.parse(localStorage.getItem('movies-watched'))];\nconst queuedMovies = [JSON.parse(localStorage.getItem('movies-queued'))];\n\nexport function loadLibrary() {\n  loadWatchedList;\n}\n\nasync function loadWatchedList() {\n  // button's visual changes\n  watchedListButton.classList.add('button--active');\n  watchedListButton.classList.remove('button--inactive');\n\n  queueListButton.classList.add('button--inactive');\n  queueListButton.classList.remove('button--active');\n\n  // change showed movies\n  moviesContainer.innerHTML = '';\n  if (watchedMovies == null || watchedMovies.length == 0) {\n    moviesContainer.innerHTML = `<h2>You don't have any watched movies yet!</h2>`;\n    return;\n  } else {\n    console.log(watchedMovies);\n\n    fetchLibrary(watchedMovies[0]);\n  }\n}\nasync function loadQueueList() {\n  // button's visual changes\n  queueListButton.classList.add('button--active');\n  queueListButton.classList.remove('button--inactive');\n\n  watchedListButton.classList.add('button--inactive');\n  watchedListButton.classList.remove('button--active');\n\n  // change showed movies\n  moviesContainer.innerHTML = '';\n  if (queuedMovies == null || queuedMovies.length == 0) {\n    moviesContainer.innerHTML = `<h2>You don't have any queued movies yet!</h2>`;\n    return;\n  } else {\n    console.log(queuedMovies[0]);\n    fetchLibrary(queuedMovies[0]);\n  }\n}\nmyLibraryButton.addEventListener('click', loadLibrary);\n\nwatchedListButton.addEventListener('click', loadWatchedList);\nqueueListButton.addEventListener('click', loadQueueList);\n"],"names":["$9920ed8db34bd8f2$export$b21c1b4271bdbe93","document","querySelector","$9920ed8db34bd8f2$export$1a30573fde3dfc62","page","results","genres","innerHTML","markup","map","poster_path","title","genre_ids","vote_average","release_date","id","id1","genresId","genre","genreNames","name","genresNames","forEach","push","indexOf","namesOfGenre","idik","slice","join","cuttedTitle","length","insertAdjacentHTML","async","$72976d1174c36c4a$export$3da1c33d77833b0c","ids","watchedMoviesURL","movieId","console","log","movies","movie","res","fetch","json","genresIds","$79aba5f329ef8862$var$myLibraryButton","$79aba5f329ef8862$var$watchedListButton","$79aba5f329ef8862$var$queueListButton","$79aba5f329ef8862$var$moviesContainer","$79aba5f329ef8862$var$watchedMovies","JSON","parse","localStorage","getItem","$79aba5f329ef8862$var$queuedMovies","$79aba5f329ef8862$var$loadWatchedList","classList","add","remove","addEventListener"],"version":3,"file":"library.49022c2e.js.map"}