{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_type_of.js","src/js/cards_rendering.js","node_modules/@swc/helpers/lib/_async_to_generator.js","node_modules/regenerator-runtime/runtime.js","src/js/main_fetch.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","const gallery = document.querySelector('.film-cards');\n\nexport function renderMovies(page, results=[]) {\n  console.log(\"wnetrze\", results);\n  const markup = results\n    .map(({ poster_path, title, genre_ids, vote_average, release_date, id })=> {\n      const genre = genre_ids.map(genre => genre_ids).join(',');\n      const releaseYear = release_date.slice(0, 4);\n      return `<div class='movie-card'>\n          <img class='movie-card__image' src='https://image.tmdb.org/t/p/w500/${poster_path}' alt='${title}' loading='lazy' />\n  <div class='movie-card__info'>\n   <p class='info__title'>${title}</p>\n   <p class='info__adds'>${genre}|${releaseYear}</p>\n   <p class='info__adds info__adds--vote'>${vote_average}</p>   \n        </div></div>`;\n    })\n    .join('');\n  gallery.insertAdjacentHTML('afterbegin', markup);\n}\n\nexport function renderModalMovie({ page, results }) {\n  const markup = results\n    .map(\n      ({\n        poster_path,\n        title,\n        original_title,\n        genres,\n        vote_average,\n        vote_count,\n        popularity,\n        overview,\n        id,\n      }) => {\n        const genre = genres.map(genre => genres.name).join(',');\n        return `<div class='movie-card movie-card--modal'>\n          <img class='movie-card__image--modal' src='https://image.tmdb.org/t/p/w500/${poster_path}' alt='${title}' loading='lazy' />\n  <div class='movie-card__info movie-card__info--modal'>\n   <p class='info--modal__title'>${title}</p>\n   <div class='info--modal__adds'>\n   <p class='adds__description'> Vote / Votes</p>\n   <p class='adds__description'> Popularity</p>\n   <p class='adds__description'> Original Title</p>\n   <p class='adds__description'> Genre</p></div> \n   <p class='adds__value'> <span class='library'> ${vote_average}</span> / ${vote_count}</p>\n   <p class='adds__value'> ${popularity}</p>\n   <p class='adds__value adds__value--title'> ${original_title}</p>\n   <p class='adds__value'> ${genre}</p></div>\n   <p class='adds__about'><span class='adds__value--title'>About</span> ${overview}</p>\n  <div class='adds__buttons>\n   <button class='button button--inactive' type='button'>Add to watched</button>\n   <button class='button button--inactive' type='button'>Add to queue</button>     \n        </div></div></div></div>`;\n      }\n    )\n    .join('');\n  //gallery.insertAdjacentHTML('afterbegin', markup);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _asyncToGenerator;\nfunction _asyncToGenerator(fn) {\n    return function() {\n        var self = this, args = arguments;\n        return new Promise(function(resolve, reject) {\n            var gen = fn.apply(self, args);\n            function _next(value) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n            }\n            function _throw(err) {\n                asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n            }\n            _next(undefined);\n        });\n    };\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n        var info = gen[key](arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    if (info.done) {\n        resolve(value);\n    } else {\n        Promise.resolve(value).then(_next, _throw);\n    }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","const API_KEY = `bf9c4d58b7779ca7f547438ec065a7d2`;\nconst API_URL = `https://api.themoviedb.org/3/trending/`\n\n\nexport const popularMovies = async () =>{\n    // media_type, time_window\nconst movies = await (await fetch(`${API_URL}movie/day?api_key=${API_KEY}`)).json();\nconsole.log(movies);\nreturn movies;\n}\n\n","import {renderMovies, rerenderModalMovie} from './js/cards_rendering.js';\n\nimport { popularMovies } from './js/main_fetch';\n\nconsole.log (\"Hello there\");\n\nconst page = popularMovies()\n.then(cos => {\n    console.log(\"to jest to\", cos.results)\n    const movies = cos.results;\n    console.log(\"filmy\", movies, typeof(movies))\nrenderMovies(0,movies)}).catch(console.warn);\n\n"],"names":["Object","defineProperty","$f59351132b4b3cee$exports","value","default","obj","constructor","Symbol","$d9b806436a2e3abf$var$gallery","document","querySelector","$d9b806436a2e3abf$export$1a30573fde3dfc62","page","results","arguments","length","console","log","markup","map","param","poster_path","title","genre_ids","vote_average","release_date","genre","id","join","releaseYear","slice","concat","insertAdjacentHTML","$84ebd01c1ddf4bef$var$asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","$84ebd01c1ddf4bef$exports","fn","self","this","args","apply","err","undefined","$21b983287c82ebd3$var$runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err1","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","result","value1","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","next1","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","key1","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","$21b983287c82ebd3$exports","regeneratorRuntime","accidentalStrictMode","globalThis","Function","$c2f97cf7dccae21e$export$1e49f9dbe4cd3022","$parcel$interopDefault","_callee","movies","fetch","_ctx","json","cos","warn"],"version":3,"file":"index.59351945.js.map"}