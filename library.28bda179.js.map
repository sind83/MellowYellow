{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAKOC,eAAeC,EAAaC,GACjC,IAAIC,EAAmB,GAEvB,IAAK,MAAMC,KAAWF,EACpBC,EAAiBE,KAAa,sCAAGD,EAAQE,+CAE3CC,QAAQC,IAAI,iCAAkCL,GAC9C,MAAMM,EAAS,GAEf,IAAK,MAAMC,KAASP,EAAkB,CACpC,IAAIQ,cAAmBC,MAAMF,IAAQG,OACjCC,EAASH,EAAY,OACrBI,EAAY,GAChB,IAAK,MAAMC,KAASF,EAClBC,EAAUV,KAAKW,EAAMV,IAEvBK,EAAe,UAAII,EACnBN,EAAOJ,KAAKM,E,CAEdJ,QAAQC,IAAI,gBAAiBC,IAC7B,EAAAX,EAAAmB,cAAa,EAAGR,EAAQA,EAAO,GAAW,QAC1CS,EAAAC,gBAAgBC,UAAY,E,cCrB9B,MAAMC,EAAkBC,SAASC,cAC/B,kCAEIC,EAAoBF,SAASC,cAAc,iBAC3CE,EAAkBH,SAASC,cAAc,gBACzCG,EAAkBJ,SAASC,cAAc,eAGzCI,EAAgB,CAACC,KAAKC,MAAMC,aAAaC,QAAQ,oBACjDC,EAAe,CAACJ,KAAKC,MAAMC,aAAaC,QAAQ,mBAStD/B,eAAeiC,IAEbT,EAAkBU,UAAUC,IAAI,kBAChCX,EAAkBU,UAAUE,OAAO,oBAEnCX,EAAgBS,UAAUC,IAAI,oBAC9BV,EAAgBS,UAAUE,OAAO,kBAGjCV,EAAgBN,UAAY,GACP,MAAjBO,GAAiD,GAAxBA,EAAcU,QAIzC9B,QAAQC,IAAImB,GAEZ1B,EAAa0B,EAAc,KAL3BD,EAAgBN,UAAY,iD,CAnBhCb,QAAQC,IAAImB,EAAeK,GAE3Bd,EAAAC,gBAAgBC,UAAY,GA6C5BC,EAAgBiB,iBAAiB,SA3C1B,WACLL,G,IA4CFT,EAAkBc,iBAAiB,QAASL,GAC5CR,EAAgBa,iBAAiB,SAvBjCtC,iBAEEyB,EAAgBS,UAAUC,IAAI,kBAC9BV,EAAgBS,UAAUE,OAAO,oBAEjCZ,EAAkBU,UAAUC,IAAI,oBAChCX,EAAkBU,UAAUE,OAAO,kBAGnCV,EAAgBN,UAAY,GACR,MAAhBY,GAA+C,GAAvBA,EAAaK,OACvCX,EAAgBN,UAAY,kDAG5Bb,QAAQC,IAAIwB,EAAa,IACzB/B,EAAa+B,EAAa,I,IAS9BC","sources":["src/js/library_fetch.js","src/js/library_main.js"],"sourcesContent":["import { renderMovies } from './cards_rendering';\nconst api_key = `bf9c4d58b7779ca7f547438ec065a7d2`;\nconst api_url = `https://api.themoviedb.org/3/movie/`;\nimport { paginationPlace } from './pagination';\n\nexport async function fetchLibrary(ids) {\n  let watchedMoviesURL = [];\n  // finding movie\n  for (const movieId of ids) {\n    watchedMoviesURL.push(api_url+`${movieId.id}?api_key=${api_key}`);\n  }\n  console.log('Movies in this library (URL): ', watchedMoviesURL);\n  const movies = [];\n\n  for (const movie of watchedMoviesURL) {\n    let res = await (await fetch(movie)).json();\n    let genres = res[`genres`];\n    let genresIds = [];\n    for (const genre of genres) {\n      genresIds.push(genre.id);\n    }\n    res['genre_ids'] = genresIds;\n    movies.push(res);\n  }\n  console.log('This library:', movies);\n  renderMovies(0, movies, movies[0]['genres']);\n  paginationPlace.innerHTML = '';\n}\n","import { fetchLibrary } from './library_fetch';\nimport { paginationPlace } from './pagination';\n\n\n// DOM elements\nconst myLibraryButton = document.querySelector(\n  '.navigation__item:nth-child(2)'\n);\nconst watchedListButton = document.querySelector('[loadWatched]');\nconst queueListButton = document.querySelector('[loadQueued]');\nconst moviesContainer = document.querySelector('.film-cards');\n\n// Local storage\nconst watchedMovies = [JSON.parse(localStorage.getItem('movies-watched'))];\nconst queuedMovies = [JSON.parse(localStorage.getItem('movies-queued'))];\nconsole.log(watchedMovies, queuedMovies)\n\npaginationPlace.innerHTML = '';\n\nexport function loadLibrary() {\n  loadWatchedList();\n}\n\nasync function loadWatchedList() {\n  // button's visual changes\n  watchedListButton.classList.add('button--active');\n  watchedListButton.classList.remove('button--inactive');\n\n  queueListButton.classList.add('button--inactive');\n  queueListButton.classList.remove('button--active');\n\n  // change showed movies\n  moviesContainer.innerHTML = '';\n  if (watchedMovies == null || watchedMovies.length == 0) {\n    moviesContainer.innerHTML = `<h2>You don't have any watched movies yet!</h2>`;\n    return;\n  } else {\n    console.log(watchedMovies);\n\n    fetchLibrary(watchedMovies[0]);\n  }\n}\nasync function loadQueueList() {\n  // button's visual changes\n  queueListButton.classList.add('button--active');\n  queueListButton.classList.remove('button--inactive');\n\n  watchedListButton.classList.add('button--inactive');\n  watchedListButton.classList.remove('button--active');\n\n  // change showed movies\n  moviesContainer.innerHTML = '';\n  if (queuedMovies == null || queuedMovies.length == 0) {\n    moviesContainer.innerHTML = `<h2>You don't have any queued movies yet!</h2>`;\n    // return;\n  } else {\n    console.log(queuedMovies[0]);\n    fetchLibrary(queuedMovies[0]);\n  }\n}\n\n\nmyLibraryButton.addEventListener('click',loadLibrary);\n\nwatchedListButton.addEventListener('click', loadWatchedList);\nqueueListButton.addEventListener('click', loadQueueList);\nloadWatchedList();\n"],"names":["$d96cH","parcelRequire","async","$72976d1174c36c4a$export$3da1c33d77833b0c","ids","watchedMoviesURL","movieId","push","id","console","log","movies","movie","res","fetch","json","genres","genresIds","genre","renderMovies","$2nhTy","paginationPlace","innerHTML","$79aba5f329ef8862$var$myLibraryButton","document","querySelector","$79aba5f329ef8862$var$watchedListButton","$79aba5f329ef8862$var$queueListButton","$79aba5f329ef8862$var$moviesContainer","$79aba5f329ef8862$var$watchedMovies","JSON","parse","localStorage","getItem","$79aba5f329ef8862$var$queuedMovies","$79aba5f329ef8862$var$loadWatchedList","classList","add","remove","length","addEventListener"],"version":3,"file":"library.28bda179.js.map"}