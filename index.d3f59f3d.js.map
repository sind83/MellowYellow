{"mappings":"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","sources":["src/js/main_fetch.js","src/js/cards_rendering.js","src/js/pagination.js","src/index.js"],"sourcesContent":["const API_KEY = `bf9c4d58b7779ca7f547438ec065a7d2`;\nconst API_URL = `https://api.themoviedb.org/3/trending/`;\nconst GENRE_URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=`;\n\nexport const popularMovies = async (pageNo = 1) => {\n  // media_type, time_window\n  const movies = await (\n    await fetch(`${API_URL}movie/week?api_key=${API_KEY}&page=${pageNo}`)\n  ).json();\n  const genreIds = await (await fetch(`${GENRE_URL}${API_KEY}`)).json();\n  console.log(`${API_URL}movie/week?api_key=${API_KEY}&page=${pageNo}`);\n  return { movies, genreIds };\n};\n","import { popularMovies } from './main_fetch';\n\nexport const gallery = document.querySelector('.film-cards');\n\nexport function renderMovies(page, results = [], genres) {\n  gallery.innerHTML = '';\n  const markup = results\n    .map(\n      ({ poster_path, title, genre_ids, vote_average, release_date, id }) => {\n        const genresNames = genres.map(genre => genre.name);\n        // const genresNames = genres.forEach(function (genre) {\n        //   genres.map(genre => genre.name);\n        // });\n        const genreNames = genresNames.slice(0, 2).join(', ');\n        const releaseYear = release_date.slice(0, 4);\n        return `<div class='movie-card'>\n          <img class='movie-card__image' src='https://image.tmdb.org/t/p/w500/${poster_path}' alt='${title}' loading='lazy' />\n  <div class='movie-card__info'>\n   <p class='info__title'>${title}</p>\n   <p class='info__adds'>${genreNames} | ${releaseYear}</p>\n   <p class='info__adds info__adds--vote'>${vote_average}</p>   \n        </div></div>`;\n      }\n    )\n    .join('');\n  gallery.insertAdjacentHTML('afterbegin', markup);\n}\n\nexport function renderModalMovie(page, results = []) {\n  const markup = results\n    .map(\n      ({\n        poster_path,\n        title,\n        original_title,\n        genres,\n        vote_average,\n        vote_count,\n        popularity,\n        overview,\n        id,\n      }) => {\n        const genre = genres.map(genre => genres.name).join(',');\n        return `<div class='movie-card movie-card--modal'>\n          <img class='movie-card__image--modal' src='https://image.tmdb.org/t/p/w500/${poster_path}' alt='${title}' loading='lazy' />\n  <div class='movie-card__info movie-card__info--modal'>\n   <p class='info--modal__title'>${title}</p>\n   <div class='info--modal__adds'>\n   <p class='adds__description'> Vote / Votes</p>\n   <p class='adds__description'> Popularity</p>\n   <p class='adds__description'> Original Title</p>\n   <p class='adds__description'> Genre</p></div> \n   <p class='adds__value'> <span class='library'> ${vote_average}</span> / ${vote_count}</p>\n   <p class='adds__value'> ${popularity}</p>\n   <p class='adds__value adds__value--title'> ${original_title}</p>\n   <p class='adds__value'> ${genre}</p></div>\n   <p class='adds__about'><span class='adds__value--title'>About</span> ${overview}</p>\n  <div class='adds__buttons>\n   <button class='button button--inactive' type='button'>Add to watched</button>\n   <button class='button button--inactive' type='button'>Add to queue</button>     \n        </div></div></div></div>`;\n      }\n    )\n    .join('');\n  //gallery.insertAdjacentHTML('afterbegin', markup);\n}\n","//import {gallery} from'./cards_rendering';\nimport { renderMovies, rerenderModalMovie } from './cards_rendering.js';\n\nimport { popularMovies } from './main_fetch';\n\n\nexport const paginationPlace = document.querySelector('.film-cards__pagination');\n\nconst dots = `. . .`;\n\nexport const pagination = (total_pages = 1, pageNo = 1) => {\n    pagination.innerHTML = '';\n    if ((total_pages >= 2)) {\n        paginationPlace.innerHTML += `<div value=\"arrow_l\" class = \"pagination__arrow left pagination__button\"></div>`;\n        paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__button\">${1}</div>`;\n        if ((total_pages <= 9) && (total_pages >= 2)) {\n            for (let i = 0; i < total_pages; i++) {\n                paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__number pagination__button\">${i + 1}</div>`\n            }\n        }\n        else {\n            let initI = 0 + pageNo;\n            for (let i = initI; i < initI + 6; i++) {\n\n                if ((i == pageNo)) {\n                    paginationPlace.innerHTML += `<div value =\"dots_l\" class = \"pagination__button\" >${dots}</div>`\n                }\n                if (i == 5 + pageNo) {\n                    paginationPlace.innerHTML += `<div value =\"dots_r\" class = \"pagination__button\" >${dots}</div>`\n                }\n                else {\n                    paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__button\">${i + 1}</div>`\n                }\n            }\n\n        }\n        paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__button\">${total_pages}</div>`;\n        paginationPlace.innerHTML += `<div value=\"arrow_r\" class = \"pagination__arrow right pagination__button\"></div>`\n    }\n    if (total_pages == 1) {\n        paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__button\">${1}</div>`\n    }\n}\n\nlet pageForURL = '';\n\nlet allPages = 1;\n\nconst page = (pageNo = 1, renderOk = true) => {\n    popularMovies(pageNo)\n        .then(elem => {\n            const movies = elem.movies.results;\n            const totalPages = elem.movies.total_pages;\n            allPages = totalPages;\n            const genresIds = elem.genreIds.genres\n            console.log(\"filmy\", movies, \"tatl pages: \", totalPages, genresIds);\n            if (renderOk) {\n                if (pageNo >= allPages - 5) {\n                    pagination(totalPages, pageNo - 5)\n                } else {\n                    pagination(totalPages, pageNo);\n                }\n            }\n            renderMovies(0, movies);\n        }).catch(console.warn);\n}\npage(allPages, true);\n\nconst paginatinSequence = paginationPlace.addEventListener(\"click\", ev => {\n    let prevPage = 0;\n    let nextPage = 0;\n    const pagBtn = ev.target;\n    let pageNum = parseInt(pagBtn.textContent);\n\n    const valueTemp = pagBtn.getAttribute('value');\n    if (valueTemp == 'page') {\n        console.log(\"page\", pagBtn.textContent);\n        if ((pageNum == 1) || (pageNum == allPages)) {\n            paginationPlace.innerHTML = '';\n            page(pageNum, true);\n        }\n        else {\n            page(pageNum, false);\n        }\n        // pageForURL = `&page=${pageNum}`\n    }\n    else {\n        if (valueTemp == 'dots_r') {\n\n            prevPage = parseInt(pagBtn.previousElementSibling.textContent);\n            pageNum = prevPage;\n            paginationPlace.innerHTML = '';\n            if (pageNum > allPages) {\n                page(allPages - 5, true);\n            } else {\n                page(pageNum, true);\n            }\n        }\n        if (valueTemp == 'dots_l') {\n            console.log(\"next: \", pagBtn.nextElementSibling.textContent);\n            nextPage = parseInt(pagBtn.nextElementSibling.textContent);\n            pageNum = nextPage - 6;\n            paginationPlace.innerHTML = '';\n            if (pageNum < 5) {\n                page(1, true);\n            } else {\n                page(pageNum, true);\n            }\n        }\n        if (valueTemp == 'arrow_r') {\n            if (pageNum.toString() == 'NaN') {\n                pageNum = 1;\n            }\n            pageNum += 1;\n            console.log(\"Czy to jest Nan:\", pageNum)\n            \n            if (pageNum > allPages) {\n                page(allPages - 5, true);\n            } else {\n                paginationPlace.innerHTML = '';\n                page(pageNum, true);\n            }\n        }\n        if (valueTemp == 'arrow_l') {\n         if (pageNum.toString() == 'NaN'){\n            pageNum=1;\n         }\n            paginationPlace.innerHTML = '';\n            if (pageNum < 5) {\n                page(1, true);\n            } else {\n                page(pageNum-1, true);\n            }\n        }\n    }\n    console.log(\"akutalna strona: \", pageNum);\n})\n\n","import { renderMovies, renderModalMovie } from './js/cards_rendering.js';\n\nimport { popularMovies } from './js/main_fetch';\nimport { pagination, paginationPlace } from './js/pagination.js';\n\nlet pageForURL = '';\n\nconst page = (pageNo = 1) => {\n  popularMovies(pageNo)\n    .then(elem => {\n      const movies = elem.movies.results;\n      const total_pages = elem.movies.total_pages;\n      const genresIds = elem.genreIds.genres;\n      console.log('filmy', movies, 'tatl pages: ', total_pages, genresIds);\n      pagination(total_pages, pageNo);\n      renderMovies(0, movies, genresIds);\n    })\n    .catch(console.warn);\n};\npage();\n\npaginationPlace.addEventListener('click', ev => {\n  const pagBtn = ev.target;\n  const pageNum = parseInt(pagBtn.textContent);\n  const valueTemp = pagBtn.getAttribute('value');\n  if (valueTemp == 'page') {\n    console.log('page', pagBtn.textContent);\n    paginationPlace.innerHTML = '';\n    page(pageNum);\n    pageForURL = `&page=${pageNum}`;\n  } else {\n    if (valueTemp == 'dots') {\n      console.log('wcisnieto kropeczki');\n    }\n    if (valueTemp == 'arrow_r') {\n      console.log('Wciśnięto strzałeczkę w prawo');\n    }\n    if (valueTemp == 'arrow_l') {\n      console.log('wciśnięto strzałeczkę w lewo');\n    }\n  }\n});\n"],"names":["$b6e64c1d61dd1119$export$1e49f9dbe4cd3022","async","pageNo","movies","fetch","json","genreIds","console","log","$9920ed8db34bd8f2$export$b21c1b4271bdbe93","document","querySelector","$9920ed8db34bd8f2$export$1a30573fde3dfc62","page","results","genres","innerHTML","markup","map","poster_path","title","genre_ids","vote_average","release_date","id","genre","name","slice","join","insertAdjacentHTML","$1bab9c519cfa82bc$export$9b7b1b7aca1fddd","$1bab9c519cfa82bc$export$22fa394f3ba39578","total_pages","i","initI","$1bab9c519cfa82bc$var$allPages","$1bab9c519cfa82bc$var$page","renderOk","then","elem","totalPages","genresIds","catch","warn","addEventListener","ev","prevPage","nextPage","pagBtn","target","pageNum","parseInt","textContent","valueTemp","getAttribute","previousElementSibling","nextElementSibling","toString","$1f0dc3b9307be026$var$pageForURL","$1f0dc3b9307be026$var$page"],"version":3,"file":"index.d3f59f3d.js.map"}