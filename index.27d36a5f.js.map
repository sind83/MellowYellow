{"mappings":"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","sources":["src/js/main_fetch.js","src/js/cards_rendering.js","src/js/pagination.js"],"sourcesContent":["const API_KEY = `bf9c4d58b7779ca7f547438ec065a7d2`;\nconst API_URL = `https://api.themoviedb.org/3/trending/`;\nconst GENRE_URL = `https://api.themoviedb.org/3/genre/movie/list?api_key=`;\n\nexport const popularMovies = async (pageNo = 1) => {\n  // media_type, time_window\n  const movies = await (\n    await fetch(`${API_URL}movie/week?api_key=${API_KEY}&page=${pageNo}`)\n  ).json();\n  const genreIds = await (await fetch(`${GENRE_URL}${API_KEY}`)).json();\n  console.log(`${API_URL}movie/week?api_key=${API_KEY}&page=${pageNo}`);\n  return { movies, genreIds };\n};\n","import { popularMovies } from './main_fetch';\n\nexport const gallery = document.querySelector('.film-cards');\n\nexport function renderMovies(page, results = [], genres) {\n  gallery.innerHTML = '';\n  const markup = results\n    .map(\n      ({ poster_path, title, genre_ids, vote_average, release_date, id }) => {\n        const genresId = genres.map(genre => genre.id);\n        const genreNames = genres.map(genre => genre.name);\n        const genresNames = [];\n        genre_ids.forEach(id => {\n          genresNames.push(genresId.indexOf(id));\n          return genresNames;\n        });\n        const namesOfGenre = genresNames\n          .map(idik => genreNames[idik])\n          .slice(0, 3)\n          .join(', ');\n        //funkcja Marty\n        // const genresArray = {};\n        // genres.forEach(genre => {\n        //   genresArray[genre.id] = genre.name;\n        // });\n        // const genreName = [];\n        // genre_ids.forEach(genreId => {\n        //   genreName.push(genresArray[genreId]);\n        // });\n        // const namesOfGenre = genreName.slice(0, 3).join(', ');\n        //funkcja Szymona\n        //     const markup = results\n        // .map(\n        //   ({ poster_path, title, genre_ids, vote_average, release_date, id }) => {\n        //     const gen = [];\n        //     let genreNames = '';\n        //     const genresIDS = genre_ids.map(item => {\n        //       genres.forEach(element => {\n        //         if (item === element.id) {\n        //           gen.push(element.name);\n        //         }\n        //       }\n        //       )\n        //       genreNames = gen.join(\", \");\n        //     });\n        const dots = '...';\n        const cuttedTitle = title.slice(0, 35) + dots;\n        const homePageTitle = title.length >= 40 ? cuttedTitle : title;\n\n        const releaseYear = release_date.slice(0, 4);\n        return `<div class='movie-card' data-movieId='${id}'>\n          <img class='movie-card__image' src='https://image.tmdb.org/t/p/w500/${poster_path}' alt='${title}' loading='lazy' />\n  <div class='movie-card__info'>\n   <p class='info__title'>${homePageTitle}</p>\n   <p class='info__adds'>${namesOfGenre} | ${releaseYear}</p>\n   <p class='info__adds info__adds--vote'>${vote_average}</p>   \n        </div></div>`;\n      }\n    )\n    .join('');\n  gallery.insertAdjacentHTML('afterbegin', markup);\n}\n\nexport function renderModalMovie(page, results = [], genres) {\n  const markup = results\n    .map(\n      ({\n        poster_path,\n        title,\n        original_title,\n        genres,\n        vote_average,\n        vote_count,\n        popularity,\n        overview,\n        id,\n      }) => {\n        const genresId = genres.map(genre => genre.id);\n        const genreNames = genres\n          .map(genre => genre.name)\n          .slice(0, 3)\n          .join(', ');\n        return `<div class='movie-card movie-card--modal' data-movieId='${id}'>\n          <img class='movie-card__image--modal' src='https://image.tmdb.org/t/p/w500/${poster_path}' alt='${title}' loading='lazy' />\n  <div class='movie-card__info movie-card__info--modal'>\n   <p class='info--modal__title'>${title}</p>\n   <div class='info--modal__adds'>\n   <p class='adds__description'> Vote / Votes</p>\n   <p class='adds__description'> Popularity</p>\n   <p class='adds__description'> Original Title</p>\n   <p class='adds__description'> Genre</p></div> \n   <p class='adds__value'> <span class='library'> ${vote_average}</span> / ${vote_count}</p>\n   <p class='adds__value'> ${popularity}</p>\n   <p class='adds__value adds__value--title'> ${original_title}</p>\n   <p class='adds__value'> ${genreNames}</p></div>\n   <p class='adds__about'><span class='adds__value--title'>About</span> ${overview}</p>\n  <div class='adds__buttons>\n   <button class='button button--inactive button--watched' type='button'>Add to watched</button>\n   <button class='button button--inactive button--queue' type='button'>Add to queue</button>     \n        </div></div></div></div>`;\n      }\n    )\n    .join('');\n  //gallery.insertAdjacentHTML('afterbegin', markup);\n}\n","//import {gallery} from'./cards_rendering';\nimport { renderMovies, renderModalMovie } from './cards_rendering.js';\n\nimport { popularMovies } from './main_fetch';\n\n\nexport const paginationPlace = document.querySelector('.film-cards__pagination');\n\nconst dots = `...`;\n\nexport const pagination = (total_pages = 1, pageNo = 1, arrowClicked = false) => {\n    pagination.innerHTML = '';\n    if ((total_pages >= 2)) {\n        if (pageNo != 1) {\n            paginationPlace.innerHTML += `<div value=\"arrow_l\" class = \"pagination__arrow left pagination__button\"></div>`;\n\n            paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__button\">${1}</div>`;\n        }\n        if ((total_pages <= 9) && (total_pages >= 2)) {\n            for (let i = 0; i < total_pages; i++) {\n                paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__number pagination__button\">${i + 1}</div>`\n            }\n        }\n        else {\n            let initI = 0 + pageNo;\n            if (arrowClicked) {\n                for (let i = initI; i < initI + 6; i++) {\n                    if ((i == initI)) {\n                        if (pageNo != 1) {\n                            paginationPlace.innerHTML += `<div value =\"dots_l\" class = \"pagination__button\" >${dots}</div>`\n                        }\n                    }\n                    if (i == 5 + initI) {\n                        if (pageNo != total_pages - 5) {\n                            paginationPlace.innerHTML += `<div value =\"dots_r\" class = \"pagination__button\" >${dots}</div>`\n                        }\n                    }\n                    else {\n                        switch (pageNo + 1) {\n                            case 3:\n                                paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__button\">${i}</div>`\n                                break;\n                            case 2:\n                                paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__button\">${i - 1}</div>`\n                                break;\n                            default:\n                                paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__button\">${i - 2}</div>`\n                        }\n                    }\n                }\n            } else {\n                for (let i = initI; i < initI + 6; i++) {\n                    if ((i == initI)) {\n                        if (pageNo != 1) {\n                            paginationPlace.innerHTML += `<div value =\"dots_l\" class = \"pagination__button\" >${dots}</div>`\n                        }\n                    }\n                    if (i == 5 + initI) {\n                        if (pageNo != total_pages - 5) {\n                            paginationPlace.innerHTML += `<div value =\"dots_r\" class = \"pagination__button\" >${dots}</div>`\n                        }\n                    }\n                    else {\n                        paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__button\">${i}</div>`\n                    }\n                }\n\n            }\n        }\n        console.log(total_pages, pageNo)\n\n        paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__button\">${total_pages}</div>`;\n        if (pageNo !== total_pages - 5) {\n            paginationPlace.innerHTML += `<div value=\"arrow_r\" class = \"pagination__arrow right pagination__button\"></div>`\n        }\n    }\n    if (total_pages == 1) {\n        paginationPlace.innerHTML += `<div value=\"page\" class=\"pagination__button\">${1}</div>`\n    }\n}\n\nlet pageForURL = '';\nlet allPages = 1;\n\nconst page = (pageNo = 1, renderOk = true, arrowClicked = false) => {\n    popularMovies(pageNo)\n        .then(elem => {\n            const movies = elem.movies.results;\n            const totalPages = elem.movies.total_pages;\n            allPages = totalPages;\n            const genresIds = elem.genreIds.genres;\n            console.log(\"filmy\", movies, \"tatl pages: \", totalPages, genresIds);\n            if (renderOk) {\n                if (pageNo >= allPages - 5) {\n                    pagination(totalPages, pageNo - 5, arrowClicked)\n                } else {\n                    pagination(totalPages, pageNo, arrowClicked);\n                }\n            }\n            renderMovies(0, movies, genresIds);\n         \n\n        }).catch(console.warn);\n}\npage(allPages, true);\nlet pageActualNum = 1;\n\npaginationPlace.addEventListener(\"click\", ev => {\n   \n    let prevPage = 0;\n    let nextPage = 0;\n    const pagBtn = ev.target;\n    let pageNum = parseInt(pagBtn.textContent);\n    let arrowClicked = false\n\n    const valueTemp = pagBtn.getAttribute('value');\n    \n    if (valueTemp == 'page') {\n        console.log(\"page\", pagBtn.textContent);\n        if ((pageNum == 1) || (pageNum == allPages)) {\n            paginationPlace.innerHTML = '';\n            page(pageNum, true);\n        }\n        else {\n            page(pageNum, false);\n        }\n        pageActualNum = pageNum;\n        // paginationPlace.children\n        //     .classList.remove(\"selected\");\n        //paginationPlace.children[pageNum - 1].classList.add(\"selected\");\n        \n        // pageForURL = `&page=${pageNum}`\n    }\n    else {\n        if (valueTemp == 'dots_r') {\n\n            prevPage = parseInt(pagBtn.previousElementSibling.textContent);\n            pageNum = prevPage + 1;\n            paginationPlace.innerHTML = '';\n            if (pageNum >= allPages) {\n                page(allPages - 4, true);\n            } else {\n                page(pageNum, true);\n            }\n            pageActualNum = pageNum;\n        }\n        if (valueTemp == 'dots_l') {\n            console.log(\"next: \", pagBtn.nextElementSibling.textContent);\n            nextPage = parseInt(pagBtn.nextElementSibling.textContent);\n            pageNum = nextPage - 5;\n            paginationPlace.innerHTML = '';\n            if (pageNum < 5) {\n                page(1, true);\n            } else {\n                page(pageNum, true);\n            }\n            pageActualNum = pageNum;\n        }\n        if (valueTemp == 'arrow_r') {\n            console.log(\"aktualny PAGE No. \", pageNum, pageActualNum);\n            pageActualNum += 1;\n            pageNum = pageActualNum;\n            console.log(\"Czy to jest Nan:\", pageNum)\n            arrowClicked = true;\n            if (pageNum > allPages) {\n                page(allPages - 5, false, arrowClicked);\n            } else {\n                paginationPlace.innerHTML = '';\n                page(pageNum, true, arrowClicked);\n            }\n            arrowClicked = false;\n\n        }\n        if (valueTemp == 'arrow_l') {\n            pageActualNum -= 1;\n            pageNum = pageActualNum;\n            console.log(\"Czy to jest Nan:\", pageNum)\n            paginationPlace.innerHTML = '';\n            arrowClicked = true;\n            if (pageNum < 2) {\n                page(1, true, arrowClicked);\n            } else {\n                page(pageNum, true, arrowClicked);\n            }\n            arrowClicked = false;\n\n        }\n    }\n    console.log(\"akutalna strona: \", pageNum);\n})\n\n"],"names":["$b6e64c1d61dd1119$export$1e49f9dbe4cd3022","async","pageNo","movies","fetch","json","genreIds","console","log","$9920ed8db34bd8f2$export$b21c1b4271bdbe93","document","querySelector","$9920ed8db34bd8f2$export$1a30573fde3dfc62","page","results","genres","innerHTML","markup","map","poster_path","title","genre_ids","vote_average","release_date","id","id1","genresId","genre","genreNames","name","genresNames","forEach","push","indexOf","namesOfGenre","idik","slice","join","cuttedTitle","length","insertAdjacentHTML","$1bab9c519cfa82bc$export$9b7b1b7aca1fddd","$1bab9c519cfa82bc$export$22fa394f3ba39578","total_pages","arrowClicked","i","initI","i1","$1bab9c519cfa82bc$var$allPages","$1bab9c519cfa82bc$var$page","renderOk","then","elem","totalPages","genresIds","catch","warn","$1bab9c519cfa82bc$var$pageActualNum","addEventListener","ev","prevPage","nextPage","pagBtn","target","pageNum","parseInt","textContent","valueTemp","getAttribute","previousElementSibling","nextElementSibling"],"version":3,"file":"index.27d36a5f.js.map"}